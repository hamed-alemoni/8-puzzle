# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from a_star_search import main as a_star_search
from uniform_cost_search import main as uniform_cost_search
from iterative_deepending_a_start_search import main as ida_star
from iterative_deepending_search import main as ids
class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(692, 634)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.run = QtWidgets.QPushButton(self.centralwidget)
        self.run.setGeometry(QtCore.QRect(290, 340, 93, 28))
        self.run.setObjectName("run")
        self.input = QtWidgets.QLineEdit(self.centralwidget)
        self.input.setGeometry(QtCore.QRect(220, 260, 241, 22))
        self.input.setText("")
        self.input.setObjectName("input")
        self.input.setPlaceholderText("Do like : 1 2 3 4 5 6 7 8 9") 
        self.heuristic = QtWidgets.QComboBox(self.centralwidget)
        self.heuristic.setGeometry(QtCore.QRect(50, 170, 171, 22))
        self.heuristic.setCurrentText("")
        self.heuristic.setObjectName("heuristic")
        self.search_algorithm = QtWidgets.QComboBox(self.centralwidget)
        self.search_algorithm.setGeometry(QtCore.QRect(460, 170, 171, 22))
        self.search_algorithm.setObjectName("search_algorithm")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(40, 130, 221, 16))
        self.label.setBaseSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(440, 130, 221, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(210, 20, 241, 21))
        font = QtGui.QFont()
        font.setPointSize(17)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.output = QtWidgets.QTextBrowser(self.centralwidget)
        self.output.setGeometry(QtCore.QRect(10, 380, 671, 192))
        self.output.setObjectName("output")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 692, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.run.clicked.connect(self.run_btn_action)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # call my merhods
        self.set_heuristic()
        self.set_search_algorithm()

    def set_heuristic(self):
        items = ['None','first_heuristic', 'second_heuristic', 'third_heuristic']
        self.heuristic.addItems(items)

    def set_search_algorithm(self):
        items = ['IDA*', 'IDS', 'A*', 'Uniform Cost Search']
        self.search_algorithm.addItems(items)

    def run_btn_action(self):
        selected_heuristic = self.heuristic.currentText()
        selected_search_algorithm = self.search_algorithm.currentText()
        input_text = self.input.text()
        heuristic = None
        algorithm = ''
        if selected_heuristic == 'first_heuristic':
            heuristic = 'first'
        elif selected_heuristic == 'second_heuristic':
            heuristic = 'second'
        elif selected_heuristic == 'third_heuristic':
            heuristic = 'third'
        if selected_search_algorithm == 'IDA*':
            algorithm = 'IDA*'
            total_cost, nodes_counter, actions, is_solved, old_cells, new_cells, depth = ida_star(input_text,heuristic)
        elif selected_search_algorithm == 'A*':
            algorithm = 'A*'
            total_cost, nodes_counter, actions, is_solved, old_cells, new_cells, depth = a_star_search(input_text,heuristic)
        elif selected_search_algorithm == 'IDS':
            algorithm = 'IDS'
            total_cost, nodes_counter, actions, is_solved, old_cells, new_cells, depth = ids(input_text)
        elif selected_search_algorithm == 'Uniform Cost Search':
            algorithm = 'Uniform Cost Search'
            total_cost, nodes_counter, actions, is_solved, old_cells, new_cells, depth = uniform_cost_search(input_text)
        if not is_solved:
                        self.output.setText(f'Is 8-puzzle solved : NO\n Algorithm : {algorithm}')
        else:
            primary_status = ''
            secondary_status = ''
            for row in old_cells:
                for cell in row:
                    primary_status += str(cell.value) + ' '
                primary_status += '\n' 
            for row in new_cells:
                for cell in row:
                    secondary_status += str(cell.value) + ' '
                secondary_status += '\n'        
                

                self.output.setText(f'''
Algorithm : {algorithm}

Total cost : {total_cost}

Depth of answer : {depth}

Number of nodes : {nodes_counter}

Actions : {actions[0:-3]}

Is 8-puzzle solved : YES

Primary Status : 
{primary_status}
Secondary Status : 
{secondary_status}
            ''')

        

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.run.setText(_translate("MainWindow", "RUN"))
        self.label.setText(_translate("MainWindow", "Select heuristic method"))
        self.label_2.setText(_translate("MainWindow", "Select search algorithm"))
        self.label_3.setText(_translate("MainWindow", "8-Puzzle Project"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
